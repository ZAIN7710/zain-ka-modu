git clone https://github.com/FabricMC/fabric-example-mod.git
cd fabric-example-mod
./gradlew genEclipseRuns
# or for IntelliJ IDEA
./gradlew genIntellijRuns
plugins {
    id 'fabric-loom' version '0.11-SNAPSHOT'
    id 'java'
}

group = 'com.yourname'
version = '1.0.0'
archivesBaseName = 'yourmodid'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17) // Required for 1.19.2
    }
}

repositories {
    maven { url = uri("https://maven.fabricmc.net/") }
    mavenCentral()
}

dependencies {
    // Minecraft and Fabric API dependencies
    mappings 'net.fabricmc:yarn:1.19.2+build.5:v2'
    modCompile "net.fabricmc:fabric-api:fabric-api-0.56.0+1.19.2"
    // This adds the Fabric API dependency
}

sourceSets.main {
    java.srcDirs = ["src/main/java"]
    resources.srcDirs = ["src/main/resources"]
}

processResources {
    filesMatching("fabric.mod.json") {
        expand("1.19.2": project.version)
    }
}

jar {
    from('LICENSE') {
        into ''
    }
}

compileJava {
    options.encoding = 'UTF-8'
}
{
  "schemaVersion": 1,
  "id": "yourmodid",
  "version": "${version}",
  "name": "Your Mod",
  "description": "A description of what your mod does.",
  "authors": [
    "YourName"
  ],
  "contact": {
    "homepage": "https://yourwebsite.com",
    "sources": "https://github.com/yourname/yourmodid"
  },
  "license": "MIT",
  "icon": "assets/yourmodid/icon.png",
  "environment": "client",
  "entrypoints": {
    "main": [
      "com.yourname.yourmodid.YourMod"
    ]
  },
  "depends": {
    "fabric-api": "*",
    "minecraft": "1.19.2"
  }
}
package com.yourname.yourmodid;

import com.mojang.logging.LogUtils;
import net.minecraft.client.Minecraft;
import net.minecraft.client.player.LocalPlayer;
import net.minecraft.network.chat.Component;
import net.minecraft.network.chat.TextComponent;
import net.minecraft.network.input.InputConstants;
import net.minecraft.world.item.BlockItem;
import net.minecraft.world.item.Item;
import net.minecraft.world.item.Items;
import net.minecraft.network.chat.TextComponent;
import net.minecraftforge.api.distmarker.Dist;
import net.minecraftforge.api.distmarker.OnlyIn;
import net.minecraftforge.client.event.InputEvent;
import net.minecraftforge.client.event.RenderGameOverlayEvent;
import net.minecraftforge.client.eventbus.api.IEventBus;
import net.minecraftforge.client.eventbus.api.SubscribeEvent;
import net.minecraftforge.eventbus.api.Mod.EventBusSubscriber;
import net.minecraftforge.eventbus.api.Mod.EventBusSubscriber.Bus;
import org.slf4j.Logger;

@Mod(YourMod.MODID)
public class YourMod {
    // Define mod id in a common place for forwarding
    public static final String MODID = "yourmodid";
    // Create a logger to capture debug output
    private static final Logger LOGGER = LogUtils.getLogger();

    public YourMod() {
        // Register the client setup method for modloading
        IEventBus modEventBus = Minecraft.getInstance().getEventManager();
        modEventBus.addListener(this::commonClientSetup);
    }

    private void commonClientSetup(final FMLCommonSetupEvent event) {
        LOGGER.info("HELLO FROM CLIENT SETUP");
        LOGGER.info("MINECRAFT NAME >> {}", Minecraft.getInstance().getUser().getName());
    }

    @OnlyIn(Dist.CLIENT)
    @EventBusSubscriber(modid = MODID, bus = Bus.MOD, value = Dist.CLIENT)
    public static class ClientModEvents {
        @SubscribeEvent
        public static void onPlayerJoinWorld(ClientPlayerNetworkEvent.LoggedInEvent event) {
            LocalPlayer player = Minecraft.getInstance().player;
            if (player != null) {
                player.sendMessage(new TextComponent("Welcome to your custom mod, " + player.getName().getString() + "!"), player.getUUID());
            }
        }

        @SubscribeEvent
        public static void onKeyInput(InputEvent.Key event) {
            if (event.getKey() == InputConstants.KEY_F) { // If the F key is pressed
                Minecraft.getInstance().player.sendMessage(new TextComponent("You pressed the F key!"), Minecraft.getInstance().player.getUUID());
            }
        }
    }
}
./gradlew build
git clone https://github.com/FabricMC/fabric-example-mod.git
cd fabric-example-mod
./gradlew genEclipseRuns
# or for IntelliJ IDEA
./gradlew genIntellijRuns
dependencies {
    // Minecraft and Fabric API dependencies
    mappings 'net.fabricmc:yarn:1.19.2+build.5:v2'
    modCompile "net.fabricmc:fabric-api:fabric-api-0.56.0+1.19.2"
}
{
  "schemaVersion": 1,
  "id": "yourmodid",
  "version": "${version}",
  "name": "Your Mod",
  "description": "A description of what your mod does.",
  "authors": ["YourNae"],
  "license": "MIT",
  "environment": "client",
  "entrypoints": {
    "main": [
      "com.yourname.yourmodid.YourMod"
    ]
  },
  "depends": {
    "fabric-api": "*",
    "minecraft": "1.19.2"
  }
}
package com.yourname.yourmodid;

import com.mojang.logging.LogUtils;
import net.minecraft.client.Minecraft;
import net.minecraft.client.player.LocalPlayer;
import net.minecraft.network.chat.Component;
import net.minecraft.network.chat.TextComponent;
import net.minecraft.network.input.InputConstants;
import net.minecraft.world.item.Item;
import net.minecraft.world.item.Items;
import net.minecraftforge.api.distmarker.Dist;
import net.minecraftforge.api.distmarker.OnlyIn;
import net.minecraftforge.client.event.InputEvent;
import net.minecraftforge.client.event.RenderGameOverlayEvent;
import net.minecraftforge.client.eventbus.api.IEventBus;
import net.minecraftforge.client.eventbus.api.ModEventSubscriber;
import net.minecraftforge.client.eventbus.api.SubscribeEvent;
import net.minecraftforge.eventbus.api.Mod.EventBusSubscriber;
import org.slf4j.Logger;

@Mod(YourMod.MODID)
public class YourMod {
    public static final String MODID = "yourmodid";
    private static final Logger LOGGER = LogUtils.getLogger();

    // Create the keybinding
    private static final KeyBinding customKey = new KeyBinding(
        "key.yourmodid.customkey", 
        InputConstants.Type.KEYSYM, 
        GLFW.GLFW_KEY_F, 
        "key.categories.misc"
    );

    public YourMod() {
        // Register the client setup method for modloading
        IEventBus modEventBus = Minecraft.getInstance().getEventManager();
        modEventBus.addListener(this::commonClientSetup);
    }

    private void commonClientSetup(final FMLCommonSetupEvent event) {
        LOGGER.info("HELLO FROM CLIENT SETUP");
    }

    @OnlyIn(Dist.CLIENT)
    @EventBusSubscriber(modid = MODID, bus = Mod.EventBusSubscriber.Bus.MOD, value = Dist.CLIENT)
    public static class ClientModEvents {

        // Register keybinding and handle custom actions
        @SubscribeEvent
        public static void onClientSetup(final FMLClientSetupEvent event) {
            // Register the keybinding
            ClientRegistry.registerKeyBinding(customKey);
        }

        // Detect key press to trigger an action
        @SubscribeEvent
        public static void onKeyInput(InputEvent.Key event) {
            if (customKey.isPressed()) {
                // Trigger action when F is pressed
                Minecraft.getInstance().player.sendMessage(new TextComponent("You pressed the F key!"), Minecraft.getInstance().player.getUUID());
            }
        }

        // Show a custom HUD element (e.g., display a custom message)
        @SubscribeEvent
        public static void onRenderOverlay(RenderGameOverlayEvent.Pre event) {
            if (event.getType() == RenderGameOverlayEvent.ElementType.TEXT) {
                Minecraft minecraft = Minecraft.getInstance();
                if (minecraft.player != null) {
                    // Display a custom message in the top-left corner of the screen
                    minecraft.font.draw(event.getMatrixStack(), 
                        new TextComponent("Custom Mod HUD: Press F for action!"), 
                        10, 10, 0xFFFFFF);
                }
            }
        }

        // Handle player joining the world and show a welcome message
        @SubscribeEvent
        public static void onPlayerJoinWorld(ClientPlayerNetworkEvent.LoggedInEvent event) {
            LocalPlayer player = Minecraft.getInstance().player;
            if (player != null) {
                player.sendMessage(new TextComponent("Welcome to your custom mod, " + player.getName().getString() + "!"), player.getUUID());
            }
        }
    }
}
{
  "key.yourmodid.customkey": "RSHIFT"
}
./gradlew build
